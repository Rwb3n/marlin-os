{#
  Blue Marlin OS - UI Style Guide (Nunjucks)
  -----------------------------------------
  This template scaffolds the style guide for all UI components, themes, and effects.
  - Header with logo/title
  - Navigation (placeholder for now)
  - Theme toggle (11ty shortcode)
  - Underwater environment (11ty shortcode)
  - Main content area for component demos
  - Footer
  - Annotations for maintainability and future expansion
#}

<!DOCTYPE html>
<html lang="en" class="phase-apex">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Blue Marlin OS - UI Style Guide</title>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body class="bg-apex-bg text-apex-text min-h-screen flex flex-col">
  {% underwaterEnvironment %}
  <!-- Header -->
  <header class="header py-4 px-6 bg-apex-header-bg text-apex-accent flex items-center justify-between">
    <div class="flex items-center gap-4">
      <span class="font-bold text-2xl">Blue Marlin OS</span>
      <span class="text-base font-semibold opacity-70">UI Style Guide</span>
    </div>
    <div class="flex items-center gap-4">
      {% themeToggle %}
    </div>
  </header>

  <!-- Navigation (placeholder for future component navigation) -->
  <nav class="w-full py-2 px-6 bg-apex-header-bg text-apex-muted">
    <!-- TODO: Add navigation links for component sections -->
    <span class="italic opacity-60">Component navigation coming soonâ€¦</span>
  </nav>

  <!-- Main Content Area -->
  <main class="flex-1 flex flex-col items-center justify-start py-8 px-4">
    <section class="w-full max-w-4xl bg-apex-container-bg rounded-lg shadow-lg p-8 mb-8">
      <h2 class="text-xl font-semibold mb-4">Component Demos</h2>
      <p class="mb-6">This style guide will showcase all UI components, themes, and effects for Blue Marlin OS. Use the navigation above to jump to specific sections (coming soon).</p>
      <!-- Button Component Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Button Component</h3>
        <p class="mb-4 text-apex-muted">Primary action button with theme-aware accent color, glow animation, and responsive states. Uses <code>button</code> and <code>btn-glow</code> classes for styling and animation.</p>
        <button class="button btn-glow px-6 py-2 rounded bg-apex-accent text-white font-bold hover:opacity-90 transition">Primary Action</button>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;button class="button btn-glow px-6 py-2 rounded bg-apex-accent text-white font-bold hover:opacity-90 transition"&gt;Primary Action&lt;/button&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> Accent color and glow adapt to day/night mode.</li>
          <li><strong>Accessible:</strong> Sufficient color contrast, focusable, and keyboard operable.</li>
          <li><strong>Animation:</strong> Uses <code>pulseGlowApex</code> or <code>pulseGlow</code> for animated glow.</li>
          <li><strong>Customizable:</strong> Add <code>button-outline</code> or <code>button-small</code> for variants (see future demos).</li>
        </ul>
      </div>
      <!-- Card Component Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Card Component</h3>
        <p class="mb-4 text-apex-muted">A glass-morphic card with theme-aware background, shadow, and rounded corners. Demonstrates content-container styling and modular utility classes.</p>
        <div class="content-container bg-apex-container-bg rounded-lg shadow-lg p-6 max-w-md w-full mb-4">
          <h4 class="text-lg font-semibold mb-2">Card Title</h4>
          <p class="mb-4">This is a sample card. It uses the <code>content-container</code> class for glass-morphism, spacing, and theme responsiveness.</p>
          <button class="button btn-glow px-4 py-2 rounded bg-apex-accent text-white font-bold hover:opacity-90 transition">Card Action</button>
        </div>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;div class="content-container bg-apex-container-bg rounded-lg shadow-lg p-6 max-w-md w-full"&gt;
  &lt;h4 class="text-lg font-semibold mb-2"&gt;Card Title&lt;/h4&gt;
  &lt;p class="mb-4"&gt;This is a sample card. It uses the &lt;code&gt;content-container&lt;/code&gt; class for glass-morphism, spacing, and theme responsiveness.&lt;/p&gt;
  &lt;button class="button btn-glow px-4 py-2 rounded bg-apex-accent text-white font-bold hover:opacity-90 transition"&gt;Card Action&lt;/button&gt;
&lt;/div&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> Card background, shadow, and accent adapt to day/night mode.</li>
          <li><strong>Accessible:</strong> Sufficient color contrast, focusable, and keyboard operable.</li>
          <li><strong>Glass-morphism:</strong> Uses backdrop blur and semi-transparent backgrounds for depth.</li>
          <li><strong>Customizable:</strong> Add <code>card-hover</code> or <code>card-outline</code> for variants (see future demos).</li>
        </ul>
      </div>
      <!-- Glass-morphic Container Component Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Glass-morphic Container Component</h3>
        <p class="mb-4 text-apex-muted">A container with glass-morphism: backdrop blur, semi-transparent background, and theme-aware styling. Uses <code>content-container</code> and Tailwind classes for visual effect and accessibility.</p>
        <div class="content-container bg-apex-container-bg/80 rounded-xl shadow-xl p-8 max-w-md w-full backdrop-blur-md border border-white/10">
          <h4 class="text-lg font-semibold mb-2">Glass-morphic Container</h4>
          <p>This container demonstrates glass-morphism with backdrop blur, transparency, and theme responsiveness. It is accessible and visually distinct in both day and night modes.</p>
        </div>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;div class="content-container bg-apex-container-bg/80 rounded-xl shadow-xl p-8 max-w-md w-full backdrop-blur-md border border-white/10"&gt;
  &lt;h4 class="text-lg font-semibold mb-2"&gt;Glass-morphic Container&lt;/h4&gt;
  &lt;p&gt;This container demonstrates glass-morphism with backdrop blur, transparency, and theme responsiveness. It is accessible and visually distinct in both day and night modes.&lt;/p&gt;
&lt;/div&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> Background, border, and shadow adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Sufficient color contrast, semantic structure, and keyboard navigation support.</li>
          <li><strong>Visual effect:</strong> Uses <code>backdrop-blur-md</code> and semi-transparent backgrounds for glass-morphism.</li>
          <li><strong>Customizable:</strong> Add <code>content-container-lg</code> or <code>glass-outline</code> for variants (see future demos).</li>
        </ul>
      </div>
      <!-- Tooltip Component Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Tooltip Component</h3>
        <p class="mb-4 text-apex-muted">A button with a tooltip that appears on hover or focus. Uses <code>tooltip</code> and <code>tooltip-content</code> classes for styling, with theme-aware colors and accessible markup.</p>
        <div class="relative inline-block group">
          <button type="button" aria-describedby="demo-tooltip" class="px-4 py-2 rounded bg-apex-accent text-white font-bold focus:outline-none focus:ring-2 focus:ring-apex-accent transition">Hover me</button>
          <div id="demo-tooltip" role="tooltip" class="tooltip-content absolute left-1/2 -translate-x-1/2 mt-2 w-40 bg-apex-header-bg text-apex-text text-xs rounded shadow-lg px-3 py-2 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity pointer-events-none z-20">
            Tooltip text: Accessible, theme-aware, and animated.
            <div class="absolute top-0 left-1/2 -translate-x-1/2 -translate-y-full w-3 h-3 bg-apex-header-bg rotate-45"></div>
          </div>
        </div>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;div class="relative inline-block group"&gt;
  &lt;button type="button" aria-describedby="demo-tooltip" class="px-4 py-2 rounded bg-apex-accent text-white font-bold focus:outline-none focus:ring-2 focus:ring-apex-accent transition"&gt;Hover me&lt;/button&gt;
  &lt;div id="demo-tooltip" role="tooltip" class="tooltip-content absolute left-1/2 -translate-x-1/2 mt-2 w-40 bg-apex-header-bg text-apex-text text-xs rounded shadow-lg px-3 py-2 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity pointer-events-none z-20"&gt;
    Tooltip text: Accessible, theme-aware, and animated.
    &lt;div class="absolute top-0 left-1/2 -translate-x-1/2 -translate-y-full w-3 h-3 bg-apex-header-bg rotate-45"&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> Tooltip background and text adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Uses <code>aria-describedby</code>, <code>role="tooltip"</code>, and keyboard focus support.</li>
          <li><strong>Animation:</strong> Tooltip fades in/out on hover/focus with <code>transition-opacity</code>.</li>
          <li><strong>Customizable:</strong> Add <code>tooltip-top</code>, <code>tooltip-lg</code>, or <code>tooltip-error</code> for variants (see future demos).</li>
        </ul>
      </div>
      <!-- Tooltip Variants Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Tooltip Variants Demo</h3>
        <p class="mb-4 text-apex-muted">Demonstrates error, large, and top-positioned tooltip variants. Each variant uses <code>tooltip-content</code> with additional modifier classes for size, color, and position. All tooltips are theme-aware and fully accessible.</p>
        <div class="flex flex-wrap gap-8 items-start">
          <!-- Error Tooltip -->
          <div class="relative inline-block group">
            <button type="button" aria-describedby="tooltip-error" class="px-4 py-2 rounded bg-red-600 text-white font-bold focus:outline-none focus:ring-2 focus:ring-red-400 transition">Error Tooltip</button>
            <div id="tooltip-error" role="tooltip" class="tooltip-content absolute left-1/2 -translate-x-1/2 mt-2 w-48 bg-red-700 text-white text-xs rounded shadow-lg px-3 py-2 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity pointer-events-none z-20">
              <span class="font-semibold">Error:</span> Something went wrong.
              <div class="absolute top-0 left-1/2 -translate-x-1/2 -translate-y-full w-3 h-3 bg-red-700 rotate-45"></div>
            </div>
          </div>
          <!-- Large Tooltip -->
          <div class="relative inline-block group">
            <button type="button" aria-describedby="tooltip-large" class="px-4 py-2 rounded bg-apex-accent text-white font-bold focus:outline-none focus:ring-2 focus:ring-apex-accent transition">Large Tooltip</button>
            <div id="tooltip-large" role="tooltip" class="tooltip-content absolute left-1/2 -translate-x-1/2 mt-2 w-64 bg-apex-header-bg text-apex-text text-sm rounded shadow-lg px-4 py-3 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity pointer-events-none z-20">
              This is a large tooltip. It provides more space for detailed information, instructions, or accessibility notes. Fully theme-aware and keyboard accessible.
              <div class="absolute top-0 left-1/2 -translate-x-1/2 -translate-y-full w-3 h-3 bg-apex-header-bg rotate-45"></div>
            </div>
          </div>
          <!-- Top Tooltip -->
          <div class="relative inline-block group">
            <button type="button" aria-describedby="tooltip-top" class="px-4 py-2 rounded bg-apex-accent text-white font-bold focus:outline-none focus:ring-2 focus:ring-apex-accent transition">Top Tooltip</button>
            <div id="tooltip-top" role="tooltip" class="tooltip-content absolute left-1/2 -translate-x-1/2 bottom-full mb-2 w-40 bg-apex-header-bg text-apex-text text-xs rounded shadow-lg px-3 py-2 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity pointer-events-none z-20">
              Tooltip above the button.
              <div class="absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-full w-3 h-3 bg-apex-header-bg rotate-45"></div>
            </div>
          </div>
        </div>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;!-- Error Tooltip --&gt;
&lt;div class="relative inline-block group"&gt;
  &lt;button type="button" aria-describedby="tooltip-error" class="px-4 py-2 rounded bg-red-600 text-white font-bold focus:outline-none focus:ring-2 focus:ring-red-400 transition"&gt;Error Tooltip&lt;/button&gt;
  &lt;div id="tooltip-error" role="tooltip" class="tooltip-content absolute left-1/2 -translate-x-1/2 mt-2 w-48 bg-red-700 text-white text-xs rounded shadow-lg px-3 py-2 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity pointer-events-none z-20"&gt;
    &lt;span class="font-semibold"&gt;Error:&lt;/span&gt; Something went wrong.
    &lt;div class="absolute top-0 left-1/2 -translate-x-1/2 -translate-y-full w-3 h-3 bg-red-700 rotate-45"&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;!-- Large Tooltip --&gt;
&lt;div class="relative inline-block group"&gt;
  &lt;button type="button" aria-describedby="tooltip-large" class="px-4 py-2 rounded bg-apex-accent text-white font-bold focus:outline-none focus:ring-2 focus:ring-apex-accent transition"&gt;Large Tooltip&lt;/button&gt;
  &lt;div id="tooltip-large" role="tooltip" class="tooltip-content absolute left-1/2 -translate-x-1/2 mt-2 w-64 bg-apex-header-bg text-apex-text text-sm rounded shadow-lg px-4 py-3 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity pointer-events-none z-20"&gt;
    This is a large tooltip. It provides more space for detailed information, instructions, or accessibility notes. Fully theme-aware and keyboard accessible.
    &lt;div class="absolute top-0 left-1/2 -translate-x-1/2 -translate-y-full w-3 h-3 bg-apex-header-bg rotate-45"&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;!-- Top Tooltip --&gt;
&lt;div class="relative inline-block group"&gt;
  &lt;button type="button" aria-describedby="tooltip-top" class="px-4 py-2 rounded bg-apex-accent text-white font-bold focus:outline-none focus:ring-2 focus:ring-apex-accent transition"&gt;Top Tooltip&lt;/button&gt;
  &lt;div id="tooltip-top" role="tooltip" class="tooltip-content absolute left-1/2 -translate-x-1/2 bottom-full mb-2 w-40 bg-apex-header-bg text-apex-text text-xs rounded shadow-lg px-3 py-2 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity pointer-events-none z-20"&gt;
    Tooltip above the button.
    &lt;div class="absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-full w-3 h-3 bg-apex-header-bg rotate-45"&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> All tooltip variants adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Each tooltip uses <code>aria-describedby</code>, <code>role="tooltip"</code>, and is keyboard focusable.</li>
          <li><strong>Variants:</strong> <code>tooltip-error</code> for error state, <code>tooltip-lg</code> for large, <code>tooltip-top</code> for above-positioned tooltips.</li>
          <li><strong>Customizable:</strong> Modifier classes can be combined for more variants (e.g., large error tooltip above).</li>
        </ul>
      </div>
      <!-- Accordion Component Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Accordion Component</h3>
        <p class="mb-4 text-apex-muted">A two-item accordion with expand/collapse animation, theme-aware styling, and accessible markup. Uses <code>accordion</code> and <code>accordion-item</code> classes for structure and state.</p>
        <div class="accordion max-w-md w-full bg-apex-container-bg rounded-lg shadow-lg divide-y divide-apex-accent/20">
          <div class="accordion-item">
            <button type="button" aria-expanded="false" aria-controls="acc-panel-1" id="acc-trigger-1" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition">
              Accordion Item 1
              <span class="ml-2 transition-transform">&#9662;</span>
            </button>
            <div id="acc-panel-1" role="region" aria-labelledby="acc-trigger-1" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4">
              <p class="py-3 text-apex-text">This is the content for accordion item 1. It expands and collapses with smooth animation.</p>
            </div>
          </div>
          <div class="accordion-item">
            <button type="button" aria-expanded="false" aria-controls="acc-panel-2" id="acc-trigger-2" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition">
              Accordion Item 2
              <span class="ml-2 transition-transform">&#9662;</span>
            </button>
            <div id="acc-panel-2" role="region" aria-labelledby="acc-trigger-2" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4">
              <p class="py-3 text-apex-text">This is the content for accordion item 2. It expands and collapses with smooth animation.</p>
            </div>
          </div>
        </div>
        <script>
        // Simple accordion JS for demo (expand/collapse)
        document.querySelectorAll('.accordion-item button').forEach(btn => {
          btn.addEventListener('click', function() {
            const expanded = this.getAttribute('aria-expanded') === 'true';
            this.setAttribute('aria-expanded', !expanded);
            const panel = document.getElementById(this.getAttribute('aria-controls'));
            if (!expanded) {
              panel.style.maxHeight = panel.scrollHeight + 'px';
            } else {
              panel.style.maxHeight = '0px';
            }
          });
        });
        </script>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;div class="accordion max-w-md w-full bg-apex-container-bg rounded-lg shadow-lg divide-y divide-apex-accent/20"&gt;
  &lt;div class="accordion-item"&gt;
    &lt;button type="button" aria-expanded="false" aria-controls="acc-panel-1" id="acc-trigger-1" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition"&gt;
      Accordion Item 1
      &lt;span class="ml-2 transition-transform"&gt;&#9662;&lt;/span&gt;
    &lt;/button&gt;
    &lt;div id="acc-panel-1" role="region" aria-labelledby="acc-trigger-1" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4"&gt;
      &lt;p class="py-3 text-apex-text"&gt;This is the content for accordion item 1. It expands and collapses with smooth animation.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="accordion-item"&gt;
    &lt;button type="button" aria-expanded="false" aria-controls="acc-panel-2" id="acc-trigger-2" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition"&gt;
      Accordion Item 2
      &lt;span class="ml-2 transition-transform"&gt;&#9662;&lt;/span&gt;
    &lt;/button&gt;
    &lt;div id="acc-panel-2" role="region" aria-labelledby="acc-trigger-2" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4"&gt;
      &lt;p class="py-3 text-apex-text"&gt;This is the content for accordion item 2. It expands and collapses with smooth animation.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
// Simple accordion JS for demo (expand/collapse)
document.querySelectorAll('.accordion-item button').forEach(btn =&gt; {
  btn.addEventListener('click', function() {
    const expanded = this.getAttribute('aria-expanded') === 'true';
    this.setAttribute('aria-expanded', !expanded);
    const panel = document.getElementById(this.getAttribute('aria-controls'));
    if (!expanded) {
      panel.style.maxHeight = panel.scrollHeight + 'px';
    } else {
      panel.style.maxHeight = '0px';
    }
  });
});
&lt;/script&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> Accordion background, border, and text adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Uses <code>aria-expanded</code>, <code>aria-controls</code>, <code>role="region"</code>, and keyboard navigation support.</li>
          <li><strong>Animation:</strong> Expands/collapses with smooth <code>transition-all</code> and <code>max-height</code> animation.</li>
          <li><strong>Customizable:</strong> Add <code>accordion-lg</code>, <code>accordion-outline</code>, or <code>accordion-icon</code> for variants (see future demos).</li>
        </ul>
      </div>
      <!-- Accordion Variants Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Accordion Variants Demo</h3>
        <p class="mb-4 text-apex-muted">Demonstrates icon, large, and outlined accordion variants. Each variant uses <code>accordion</code> and <code>accordion-item</code> classes with additional modifier classes. All variants are theme-aware and fully accessible.</p>
        
        <!-- Icon Accordion -->
        <div class="mb-8">
          <h4 class="text-base font-semibold mb-2">Icon Accordion</h4>
          <div class="accordion accordion-icon max-w-md w-full bg-apex-container-bg rounded-lg shadow-lg divide-y divide-apex-accent/20">
            <div class="accordion-item">
              <button type="button" aria-expanded="false" aria-controls="icon-panel-1" id="icon-trigger-1" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition">
                <div class="flex items-center">
                  <svg class="w-5 h-5 mr-3" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z" clip-rule="evenodd"></path>
                  </svg>
                  <span>Icon Accordion Item 1</span>
                </div>
                <svg class="w-5 h-5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              <div id="icon-panel-1" role="region" aria-labelledby="icon-trigger-1" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4">
                <p class="py-3 text-apex-text">This is the content for icon accordion item 1. The icon enhances visual hierarchy and adds context.</p>
              </div>
            </div>
            <div class="accordion-item">
              <button type="button" aria-expanded="false" aria-controls="icon-panel-2" id="icon-trigger-2" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition">
                <div class="flex items-center">
                  <svg class="w-5 h-5 mr-3" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                  </svg>
                  <span>Icon Accordion Item 2</span>
                </div>
                <svg class="w-5 h-5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              <div id="icon-panel-2" role="region" aria-labelledby="icon-trigger-2" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4">
                <p class="py-3 text-apex-text">This is the content for icon accordion item 2. Icons enhance recognition and improve accessibility.</p>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Large Accordion -->
        <div class="mb-8">
          <h4 class="text-base font-semibold mb-2">Large Accordion</h4>
          <div class="accordion accordion-lg max-w-md w-full bg-apex-container-bg rounded-lg shadow-lg divide-y divide-apex-accent/20">
            <div class="accordion-item">
              <button type="button" aria-expanded="false" aria-controls="lg-panel-1" id="lg-trigger-1" class="w-full flex justify-between items-center px-6 py-4 text-left font-semibold text-lg text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition">
                Large Accordion Item
                <span class="ml-2 transition-transform">&#9662;</span>
              </button>
              <div id="lg-panel-1" role="region" aria-labelledby="lg-trigger-1" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-6">
                <p class="py-4 text-apex-text text-base">This is a large accordion item with increased padding, font size, and spacing. Provides more visual prominence for important content or primary sections.</p>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Outlined Accordion -->
        <div class="mb-8">
          <h4 class="text-base font-semibold mb-2">Outlined Accordion</h4>
          <div class="accordion accordion-outline max-w-md w-full rounded-lg overflow-hidden">
            <div class="accordion-item mb-3 border-2 border-apex-accent/40 rounded-lg overflow-hidden">
              <button type="button" aria-expanded="false" aria-controls="outline-panel-1" id="outline-trigger-1" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition bg-apex-container-bg/80">
                Outlined Accordion Item 1
                <span class="ml-2 transition-transform">&#9662;</span>
              </button>
              <div id="outline-panel-1" role="region" aria-labelledby="outline-trigger-1" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4">
                <p class="py-3 text-apex-text">This is the content for outlined accordion item 1. The border adds visual emphasis and separation.</p>
              </div>
            </div>
            <div class="accordion-item border-2 border-apex-accent/40 rounded-lg overflow-hidden">
              <button type="button" aria-expanded="false" aria-controls="outline-panel-2" id="outline-trigger-2" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition bg-apex-container-bg/80">
                Outlined Accordion Item 2
                <span class="ml-2 transition-transform">&#9662;</span>
              </button>
              <div id="outline-panel-2" role="region" aria-labelledby="outline-trigger-2" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4">
                <p class="py-3 text-apex-text">This is the content for outlined accordion item 2. Using separate bordered containers creates clear separation between items.</p>
              </div>
            </div>
          </div>
        </div>
        
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;!-- Icon Accordion --&gt;
&lt;div class="accordion accordion-icon max-w-md w-full bg-apex-container-bg rounded-lg shadow-lg divide-y divide-apex-accent/20"&gt;
  &lt;div class="accordion-item"&gt;
    &lt;button type="button" aria-expanded="false" aria-controls="icon-panel-1" id="icon-trigger-1" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition"&gt;
      &lt;div class="flex items-center"&gt;
        &lt;svg class="w-5 h-5 mr-3" fill="currentColor" viewBox="0 0 20 20"&gt;
          &lt;path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z" clip-rule="evenodd"&gt;&lt;/path&gt;
        &lt;/svg&gt;
        &lt;span&gt;Icon Accordion Item&lt;/span&gt;
      &lt;/div&gt;
      &lt;svg class="w-5 h-5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24"&gt;
        &lt;path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"&gt;&lt;/path&gt;
      &lt;/svg&gt;
    &lt;/button&gt;
    &lt;div id="icon-panel-1" role="region" aria-labelledby="icon-trigger-1" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4"&gt;
      &lt;p class="py-3 text-apex-text"&gt;Content with the same accessibility and animation features.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;!-- Large Accordion --&gt;
&lt;div class="accordion accordion-lg max-w-md w-full bg-apex-container-bg rounded-lg shadow-lg divide-y divide-apex-accent/20"&gt;
  &lt;div class="accordion-item"&gt;
    &lt;button type="button" aria-expanded="false" aria-controls="lg-panel-1" id="lg-trigger-1" class="w-full flex justify-between items-center px-6 py-4 text-left font-semibold text-lg text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition"&gt;
      Large Accordion Item
      &lt;span class="ml-2 transition-transform"&gt;&#9662;&lt;/span&gt;
    &lt;/button&gt;
    &lt;div id="lg-panel-1" role="region" aria-labelledby="lg-trigger-1" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-6"&gt;
      &lt;p class="py-4 text-apex-text text-base"&gt;This is a large accordion with increased padding and font size.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;!-- Outlined Accordion --&gt;
&lt;div class="accordion accordion-outline max-w-md w-full rounded-lg overflow-hidden"&gt;
  &lt;div class="accordion-item mb-3 border-2 border-apex-accent/40 rounded-lg overflow-hidden"&gt;
    &lt;button type="button" aria-expanded="false" aria-controls="outline-panel-1" id="outline-trigger-1" class="w-full flex justify-between items-center px-4 py-3 text-left font-semibold text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition bg-apex-container-bg/80"&gt;
      Outlined Accordion Item
      &lt;span class="ml-2 transition-transform"&gt;&#9662;&lt;/span&gt;
    &lt;/button&gt;
    &lt;div id="outline-panel-1" role="region" aria-labelledby="outline-trigger-1" class="max-h-0 overflow-hidden transition-all duration-300 bg-apex-bg px-4"&gt;
      &lt;p class="py-3 text-apex-text"&gt;Content with accent-colored border for emphasis.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
        </div>
        
        <script>
        // Accordion variant JS (reuses same functionality)
        document.querySelectorAll('.accordion-variant .accordion-item button, .accordion-icon .accordion-item button, .accordion-lg .accordion-item button, .accordion-outline .accordion-item button').forEach(btn => {
          btn.addEventListener('click', function() {
            const expanded = this.getAttribute('aria-expanded') === 'true';
            this.setAttribute('aria-expanded', !expanded);
            // Toggle arrow rotation for SVG arrows
            const arrow = this.querySelector('svg:last-child, span:last-child');
            if (arrow) {
              if (expanded) {
                arrow.style.transform = '';
              } else {
                arrow.style.transform = 'rotate(180deg)';
              }
            }
            const panel = document.getElementById(this.getAttribute('aria-controls'));
            if (!expanded) {
              panel.style.maxHeight = panel.scrollHeight + 'px';
            } else {
              panel.style.maxHeight = '0px';
            }
          });
        });
        </script>
        
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> All accordion variants adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Each variant maintains all accessibility attributes and keyboard functionality.</li>
          <li><strong>Variants:</strong>
            <ul class="pl-5 mt-1 space-y-1">
              <li><code>accordion-icon</code>: Adds relevant icons for visual context and improved recognition</li>
              <li><code>accordion-lg</code>: Increases size and padding for primary sections or focal points</li>
              <li><code>accordion-outline</code>: Adds borders for clear visual separation and emphasis</li>
            </ul>
          </li>
          <li><strong>Customizable:</strong> Modifier classes can be combined for more complex variants (e.g., large icon accordion).</li>
        </ul>
      </div>
      <!-- Tabs Component Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Tabs Component</h3>
        <p class="mb-4 text-apex-muted">A three-tab interface with animated active indicator, theme-aware styling, and accessible markup. Uses <code>tabs</code> and <code>tab</code> classes for structure and state.</p>
        <div class="tabs-demo max-w-md w-full bg-apex-container-bg rounded-lg shadow-lg p-6">
          <div role="tablist" aria-label="Demo Tabs" class="flex border-b border-apex-accent/30 mb-4">
            <button type="button" role="tab" aria-selected="true" aria-controls="tab-panel-1" id="tab-1" tabindex="0" class="tab px-4 py-2 font-semibold text-apex-accent border-b-2 border-apex-accent bg-apex-bg rounded-t transition focus:outline-none focus:ring-2 focus:ring-apex-accent">Tab 1</button>
            <button type="button" role="tab" aria-selected="false" aria-controls="tab-panel-2" id="tab-2" tabindex="-1" class="tab px-4 py-2 font-semibold text-apex-muted border-b-2 border-transparent bg-apex-bg rounded-t transition focus:outline-none focus:ring-2 focus:ring-apex-accent">Tab 2</button>
            <button type="button" role="tab" aria-selected="false" aria-controls="tab-panel-3" id="tab-3" tabindex="-1" class="tab px-4 py-2 font-semibold text-apex-muted border-b-2 border-transparent bg-apex-bg rounded-t transition focus:outline-none focus:ring-2 focus:ring-apex-accent">Tab 3</button>
          </div>
          <div id="tab-panel-1" role="tabpanel" aria-labelledby="tab-1" class="tab-panel">
            <p class="text-apex-text">This is the content for Tab 1. Tabs are fully accessible and theme-responsive.</p>
          </div>
          <div id="tab-panel-2" role="tabpanel" aria-labelledby="tab-2" class="tab-panel hidden">
            <p class="text-apex-text">This is the content for Tab 2. Switch tabs using mouse or keyboard.</p>
          </div>
          <div id="tab-panel-3" role="tabpanel" aria-labelledby="tab-3" class="tab-panel hidden">
            <p class="text-apex-text">This is the content for Tab 3. All states are animated and accessible.</p>
          </div>
        </div>
        <script>
        // Simple tabs JS for demo (keyboard/mouse accessible)
        (function() {
          const tabs = document.querySelectorAll('.tabs-demo [role="tab"]');
          const panels = document.querySelectorAll('.tabs-demo .tab-panel');
          tabs.forEach((tab, idx) => {
            tab.addEventListener('click', () => activateTab(idx));
            tab.addEventListener('keydown', e => {
              if (e.key === 'ArrowRight') activateTab((idx + 1) % tabs.length);
              if (e.key === 'ArrowLeft') activateTab((idx - 1 + tabs.length) % tabs.length);
            });
          });
          function activateTab(i) {
            tabs.forEach((tab, j) => {
              tab.setAttribute('aria-selected', i === j ? 'true' : 'false');
              tab.tabIndex = i === j ? 0 : -1;
              tab.classList.toggle('text-apex-accent', i === j);
              tab.classList.toggle('border-apex-accent', i === j);
              tab.classList.toggle('text-apex-muted', i !== j);
              tab.classList.toggle('border-transparent', i !== j);
            });
            panels.forEach((panel, j) => {
              panel.classList.toggle('hidden', i !== j);
            });
            tabs[i].focus();
          }
        })();
        </script>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;div class="tabs-demo max-w-md w-full bg-apex-container-bg rounded-lg shadow-lg p-6"&gt;
  &lt;div role="tablist" aria-label="Demo Tabs" class="flex border-b border-apex-accent/30 mb-4"&gt;
    &lt;button type="button" role="tab" aria-selected="true" aria-controls="tab-panel-1" id="tab-1" tabindex="0" class="tab px-4 py-2 font-semibold text-apex-accent border-b-2 border-apex-accent bg-apex-bg rounded-t transition focus:outline-none focus:ring-2 focus:ring-apex-accent"&gt;Tab 1&lt;/button&gt;
    &lt;button type="button" role="tab" aria-selected="false" aria-controls="tab-panel-2" id="tab-2" tabindex="-1" class="tab px-4 py-2 font-semibold text-apex-muted border-b-2 border-transparent bg-apex-bg rounded-t transition focus:outline-none focus:ring-2 focus:ring-apex-accent"&gt;Tab 2&lt;/button&gt;
    &lt;button type="button" role="tab" aria-selected="false" aria-controls="tab-panel-3" id="tab-3" tabindex="-1" class="tab px-4 py-2 font-semibold text-apex-muted border-b-2 border-transparent bg-apex-bg rounded-t transition focus:outline-none focus:ring-2 focus:ring-apex-accent"&gt;Tab 3&lt;/button&gt;
  &lt;/div&gt;
  &lt;div id="tab-panel-1" role="tabpanel" aria-labelledby="tab-1" class="tab-panel"&gt;
    &lt;p class="text-apex-text"&gt;This is the content for Tab 1. Tabs are fully accessible and theme-responsive.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div id="tab-panel-2" role="tabpanel" aria-labelledby="tab-2" class="tab-panel hidden"&gt;
    &lt;p class="text-apex-text"&gt;This is the content for Tab 2. Switch tabs using mouse or keyboard.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div id="tab-panel-3" role="tabpanel" aria-labelledby="tab-3" class="tab-panel hidden"&gt;
    &lt;p class="text-apex-text"&gt;This is the content for Tab 3. All states are animated and accessible.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
// Simple tabs JS for demo (keyboard/mouse accessible)
(function() {
  const tabs = document.querySelectorAll('.tabs-demo [role=\"tab\"]');
  const panels = document.querySelectorAll('.tabs-demo .tab-panel');
  tabs.forEach((tab, idx) => {
    tab.addEventListener('click', () => activateTab(idx));
    tab.addEventListener('keydown', e => {
      if (e.key === 'ArrowRight') activateTab((idx + 1) % tabs.length);
      if (e.key === 'ArrowLeft') activateTab((idx - 1 + tabs.length) % tabs.length);
    });
  });
  function activateTab(i) {
    tabs.forEach((tab, j) => {
      tab.setAttribute('aria-selected', i === j ? 'true' : 'false');
      tab.tabIndex = i === j ? 0 : -1;
      tab.classList.toggle('text-apex-accent', i === j);
      tab.classList.toggle('border-apex-accent', i === j);
      tab.classList.toggle('text-apex-muted', i !== j);
      tab.classList.toggle('border-transparent', i !== j);
    });
    panels.forEach((panel, j) => {
      panel.classList.toggle('hidden', i !== j);
    });
    tabs[i].focus();
  }
})();
&lt;/script&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> Tabs, indicator, and content adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Uses <code>role="tablist"</code>, <code>role="tab"</code>, <code>role="tabpanel"</code>, <code>aria-selected</code>, <code>aria-controls</code>, <code>aria-labelledby</code>, and keyboard navigation support.</li>
          <li><strong>Animation:</strong> Active indicator and content transitions are animated for smooth UX.</li>
          <li><strong>Customizable:</strong> Add <code>tab-lg</code>, <code>tab-outline</code>, or <code>tab-icon</code> for variants (see future demos).</li>
        </ul>
      </div>
      <!-- Card Variants Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Card Variants Demo</h3>
        <p class="mb-4 text-apex-muted">Three card variants: default, outlined, and hoverable. Each uses <code>content-container</code> and Tailwind classes for theme-aware styling and accessibility.</p>
        <div class="flex flex-col gap-6 max-w-2xl w-full">
          <!-- Default Card -->
          <div class="content-container bg-apex-container-bg rounded-lg shadow-lg p-6">
            <h4 class="text-lg font-semibold mb-2">Default Card</h4>
            <p class="mb-2">This is the default card variant. It uses a glass-morphic background and standard shadow.</p>
          </div>
          <!-- Outlined Card -->
          <div class="content-container bg-apex-container-bg/80 rounded-lg shadow p-6 border border-apex-accent/40">
            <h4 class="text-lg font-semibold mb-2">Outlined Card</h4>
            <p class="mb-2">This card variant adds a subtle accent border for extra emphasis.</p>
          </div>
          <!-- Hoverable Card -->
          <div class="content-container bg-apex-container-bg rounded-lg shadow-lg p-6 transition-transform duration-200 hover:scale-105 hover:shadow-xl focus-within:scale-105 focus-within:shadow-xl cursor-pointer">
            <h4 class="text-lg font-semibold mb-2">Hoverable Card</h4>
            <p class="mb-2">This card variant animates on hover/focus for interactive feedback.</p>
          </div>
        </div>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;!-- Default Card --&gt;
&lt;div class="content-container bg-apex-container-bg rounded-lg shadow-lg p-6"&gt;
  &lt;h4 class="text-lg font-semibold mb-2"&gt;Default Card&lt;/h4&gt;
  &lt;p class="mb-2"&gt;This is the default card variant. It uses a glass-morphic background and standard shadow.&lt;/p&gt;
&lt;/div&gt;

&lt;!-- Outlined Card --&gt;
&lt;div class="content-container bg-apex-container-bg/80 rounded-lg shadow p-6 border border-apex-accent/40"&gt;
  &lt;h4 class="text-lg font-semibold mb-2"&gt;Outlined Card&lt;/h4&gt;
  &lt;p class="mb-2"&gt;This card variant adds a subtle accent border for extra emphasis.&lt;/p&gt;
&lt;/div&gt;

&lt;!-- Hoverable Card --&gt;
&lt;div class="content-container bg-apex-container-bg rounded-lg shadow-lg p-6 transition-transform duration-200 hover:scale-105 hover:shadow-xl focus-within:scale-105 focus-within:shadow-xl cursor-pointer"&gt;
  &lt;h4 class="text-lg font-semibold mb-2"&gt;Hoverable Card&lt;/h4&gt;
  &lt;p class="mb-2"&gt;This card variant animates on hover/focus for interactive feedback.&lt;/p&gt;
&lt;/div&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> All card variants adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Sufficient color contrast, semantic structure, and keyboard navigation support.</li>
          <li><strong>Variants:</strong> Outlined adds a border, hoverable animates on hover/focus, default is static.</li>
          <li><strong>Customizable:</strong> Add <code>card-lg</code>, <code>card-outline</code>, or <code>card-hover</code> for more variants (see future demos).</li>
        </ul>
      </div>
      <!-- Project Card Component Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Project Card Component</h3>
        <p class="mb-4 text-apex-muted">A modular project card for use in project lists and grids. Includes title, description, tags, and a call-to-action button. Uses <code>project-card</code> and Tailwind classes for theme-aware styling and accessibility.</p>
        <div class="project-card content-container bg-apex-container-bg rounded-xl shadow-lg p-6 max-w-md w-full flex flex-col gap-4">
          <div>
            <h4 class="text-xl font-bold mb-1">Blue Marlin Underwater Explorer</h4>
            <p class="text-apex-muted mb-2">A real-time underwater simulation with dynamic light shafts, particles, and theme transitions. Built with 11ty, Tailwind, and custom JS effects.</p>
          </div>
          <div class="flex flex-wrap gap-2 mb-2">
            <span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-1 rounded">11ty</span>
            <span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-1 rounded">Tailwind</span>
            <span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-1 rounded">JS Effects</span>
          </div>
          <button class="read-more inline-flex items-center font-semibold text-apex-accent hover:underline hover:text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition group self-start">
            View Project
            <svg class="ml-2 h-4 w-4 transition-transform group-hover:translate-x-1 group-focus:translate-x-1" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M5 12h14m-6-6l6 6-6 6"/></svg>
          </button>
        </div>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;div class="project-card content-container bg-apex-container-bg rounded-xl shadow-lg p-6 max-w-md w-full flex flex-col gap-4"&gt;
  &lt;div&gt;
    &lt;h4 class="text-xl font-bold mb-1"&gt;Blue Marlin Underwater Explorer&lt;/h4&gt;
    &lt;p class="text-apex-muted mb-2"&gt;A real-time underwater simulation with dynamic light shafts, particles, and theme transitions. Built with 11ty, Tailwind, and custom JS effects.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="flex flex-wrap gap-2 mb-2"&gt;
    &lt;span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-1 rounded"&gt;11ty&lt;/span&gt;
    &lt;span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-1 rounded"&gt;Tailwind&lt;/span&gt;
    &lt;span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-1 rounded"&gt;JS Effects&lt;/span&gt;
  &lt;/div&gt;
  &lt;button class="read-more inline-flex items-center font-semibold text-apex-accent hover:underline hover:text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition group self-start"&gt;
    View Project
    &lt;svg class="ml-2 h-4 w-4 transition-transform group-hover:translate-x-1 group-focus:translate-x-1" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M5 12h14m-6-6l6 6-6 6"/&gt;&lt;/svg&gt;
  &lt;/button&gt;
&lt;/div&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> Card, tags, and button adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Sufficient color contrast, semantic structure, focus ring, and keyboard navigation support.</li>
          <li><strong>Modular:</strong> Designed for use in project lists and grid layouts.</li>
          <li><strong>Customizable:</strong> Add <code>project-card-lg</code>, <code>project-card-outline</code>, or <code>project-card-hover</code> for variants (see future demos).</li>
        </ul>
      </div>
      <!-- Journal/Blog Card Component Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Journal/Blog Card Component</h3>
        <p class="mb-4 text-apex-muted">A modular journal/blog card for use in post lists and grids. Includes post title, excerpt, date, tags, and a read more link. Uses <code>journal-card</code> and Tailwind classes for theme-aware styling and accessibility.</p>
        <div class="journal-card content-container bg-apex-container-bg rounded-xl shadow p-6 max-w-md w-full flex flex-col gap-3">
          <div class="flex items-center justify-between mb-1">
            <span class="text-xs text-apex-muted">2025-03-26</span>
            <div class="flex flex-wrap gap-1">
              <span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-0.5 rounded">Update</span>
              <span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-0.5 rounded">Migration</span>
            </div>
          </div>
          <h4 class="text-lg font-bold mb-1">Migration Progress Update</h4>
          <p class="text-apex-muted mb-2">We've completed the core visual effects and are now building out the modular UI component system in Tailwind and 11ty.</p>
          <a href="#" class="read-more inline-flex items-center font-semibold text-apex-accent hover:underline hover:text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition group self-start">
            Read More
            <svg class="ml-2 h-4 w-4 transition-transform group-hover:translate-x-1 group-focus:translate-x-1" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M5 12h14m-6-6l6 6-6 6"/></svg>
          </a>
        </div>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;div class="journal-card content-container bg-apex-container-bg rounded-xl shadow p-6 max-w-md w-full flex flex-col gap-3"&gt;
  &lt;div class="flex items-center justify-between mb-1"&gt;
    &lt;span class="text-xs text-apex-muted"&gt;2025-03-26&lt;/span&gt;
    &lt;div class="flex flex-wrap gap-1"&gt;
      &lt;span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-0.5 rounded"&gt;Update&lt;/span&gt;
      &lt;span class="inline-block bg-apex-accent/20 text-apex-accent text-xs font-semibold px-2 py-0.5 rounded"&gt;Migration&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;h4 class="text-lg font-bold mb-1"&gt;Migration Progress Update&lt;/h4&gt;
  &lt;p class="text-apex-muted mb-2"&gt;We've completed the core visual effects and are now building out the modular UI component system in Tailwind and 11ty.&lt;/p&gt;
  &lt;a href="#" class="read-more inline-flex items-center font-semibold text-apex-accent hover:underline hover:text-apex-accent focus:outline-none focus:ring-2 focus:ring-apex-accent transition group self-start"&gt;
    Read More
    &lt;svg class="ml-2 h-4 w-4 transition-transform group-hover:translate-x-1 group-focus:translate-x-1" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M5 12h14m-6-6l6 6-6 6"/&gt;&lt;/svg&gt;
  &lt;/a&gt;
&lt;/div&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> Card, tags, and link adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Sufficient color contrast, semantic structure, focus ring, and keyboard navigation support.</li>
          <li><strong>Modular:</strong> Designed for use in journal/blog lists and grid layouts.</li>
          <li><strong>Customizable:</strong> Add <code>journal-card-lg</code>, <code>journal-card-outline</code>, or <code>journal-card-hover</code> for variants (see future demos).</li>
        </ul>
      </div>
      <!-- Layout Components Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Layout Components Demo</h3>
        <p class="mb-4 text-apex-muted">Demonstrates 1-column, 2-column, and 3-column grid layouts using Tailwind and theme classes. Modular and responsive for use in page layouts.</p>
        <!-- 1-Column Layout -->
        <div class="mb-6">
          <h4 class="text-base font-semibold mb-2">1-Column Layout (Mobile First)</h4>
          <div class="bg-apex-container-bg rounded-lg shadow p-4 flex flex-col gap-4">
            <div class="bg-apex-bg/80 rounded p-3 text-apex-text">Header</div>
            <div class="bg-apex-bg/80 rounded p-3 text-apex-text">Main Content</div>
            <div class="bg-apex-bg/80 rounded p-3 text-apex-text">Footer</div>
          </div>
        </div>
        <!-- 2-Column Layout -->
        <div class="mb-6">
          <h4 class="text-base font-semibold mb-2">2-Column Layout (Content + Sidebar)</h4>
          <div class="bg-apex-container-bg rounded-lg shadow p-4 grid grid-cols-1 md:grid-cols-3 gap-4">
            <div class="md:col-span-2 bg-apex-bg/80 rounded p-3 text-apex-text">Main Content</div>
            <div class="md:col-span-1 bg-apex-bg/80 rounded p-3 text-apex-text">Sidebar</div>
          </div>
        </div>
        <!-- 3-Column Grid Layout -->
        <div class="mb-6">
          <h4 class="text-base font-semibold mb-2">3-Column Grid Layout</h4>
          <div class="bg-apex-container-bg rounded-lg shadow p-4 grid grid-cols-1 md:grid-cols-3 gap-4">
            <div class="bg-apex-bg/80 rounded p-3 text-apex-text">Column 1</div>
            <div class="bg-apex-bg/80 rounded p-3 text-apex-text">Column 2</div>
            <div class="bg-apex-bg/80 rounded p-3 text-apex-text">Column 3</div>
          </div>
        </div>
        <div class="mt-4 bg-black/50 rounded p-4 text-xs text-white font-mono">
          {# Code Sample #}
          <pre><code>&lt;!-- 1-Column Layout --&gt;
&lt;div class="bg-apex-container-bg rounded-lg shadow p-4 flex flex-col gap-4"&gt;
  &lt;div class="bg-apex-bg/80 rounded p-3 text-apex-text"&gt;Header&lt;/div&gt;
  &lt;div class="bg-apex-bg/80 rounded p-3 text-apex-text"&gt;Main Content&lt;/div&gt;
  &lt;div class="bg-apex-bg/80 rounded p-3 text-apex-text"&gt;Footer&lt;/div&gt;
&lt;/div&gt;

&lt;!-- 2-Column Layout --&gt;
&lt;div class="bg-apex-container-bg rounded-lg shadow p-4 grid grid-cols-1 md:grid-cols-3 gap-4"&gt;
  &lt;div class="md:col-span-2 bg-apex-bg/80 rounded p-3 text-apex-text"&gt;Main Content&lt;/div&gt;
  &lt;div class="md:col-span-1 bg-apex-bg/80 rounded p-3 text-apex-text"&gt;Sidebar&lt;/div&gt;
&lt;/div&gt;

&lt;!-- 3-Column Grid Layout --&gt;
&lt;div class="bg-apex-container-bg rounded-lg shadow p-4 grid grid-cols-1 md:grid-cols-3 gap-4"&gt;
  &lt;div class="bg-apex-bg/80 rounded p-3 text-apex-text"&gt;Column 1&lt;/div&gt;
  &lt;div class="bg-apex-bg/80 rounded p-3 text-apex-text"&gt;Column 2&lt;/div&gt;
  &lt;div class="bg-apex-bg/80 rounded p-3 text-apex-text"&gt;Column 3&lt;/div&gt;
&lt;/div&gt;</code></pre>
        </div>
        <ul class="mt-2 text-sm text-apex-muted list-disc pl-5">
          <li><strong>Theme responsive:</strong> All layouts adapt to day/night mode using theme classes.</li>
          <li><strong>Accessible:</strong> Semantic structure, keyboard navigation, and sufficient color contrast.</li>
          <li><strong>Modular:</strong> Designed for use in page layouts and grid systems.</li>
          <li><strong>Customizable:</strong> Add <code>layout-lg</code>, <code>layout-grid</code>, or <code>layout-responsive</code> for variants (see future demos).</li>
        </ul>
      </div>
      <!-- Footer Bar Component Demo -->
      <div class="mb-10">
        <h3 class="text-lg font-bold mb-2">Footer Bar Component</h3>
        <p class="mb-4 text-apex-muted">A modular footer bar for use across pages. Includes copyright, links, and theme-aware styling. Uses <code>footer-bar</code> and Tailwind classes for accessibility and modularity.</p>
        <footer class="footer-bar w-full py-4 text-center text-apex-muted bg-apex-header-bg">
          &copy; 2025 Blue Marlin OS &mdash; UI Style Guide
        </footer>
      </div>
    </section>
  </main>

  <!-- Footer -->
  <footer class="footer-bar py-4 text-center text-apex-muted bg-apex-header-bg">
    &copy; 2025 Blue Marlin OS &mdash; UI Style Guide
  </footer>
</body>
</html> 