<!-- Theme Toggle Component
     A toggle button that switches between day/night themes with animation
     
     Usage:
     {% include "components/theme-toggle.njk" %}
     
     Parameters:
     - position: (optional) CSS classes for positioning (default is "absolute top-4 right-4")
-->

<button 
  class="theme-toggle {{ position | default('absolute top-4 right-4') }} z-20 w-12 h-12 rounded-full p-2 flex items-center justify-center transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-blue-400 hover:bg-blue-100 dark:hover:bg-blue-800" 
  aria-label="Toggle theme" 
  title="Toggle between day and night themes"
  data-theme-toggle>
  
  <!-- Sun icon (shown in dark mode) -->
  <svg class="theme-toggle-sun w-7 h-7 text-yellow-400 absolute transition-transform duration-500 rotate-0 scale-100 dark:rotate-90 dark:scale-0" 
       xmlns="http://www.w3.org/2000/svg" 
       viewBox="0 0 24 24" 
       fill="currentColor">
    <path d="M12 3v1m0 16v1m-9-9H2m18 0h1M5.6 5.6l.7.7m12.1-.7l-.7.7m-12.1 12.1l.7-.7m12.1.7l-.7-.7M12 12a3 3 0 110-6 3 3 0 010 6z" 
          stroke-width="2" 
          stroke-linecap="round" 
          stroke-linejoin="round" />
  </svg>
  
  <!-- Moon icon (shown in light mode) -->
  <svg class="theme-toggle-moon w-6 h-6 text-blue-900 absolute transition-transform duration-500 rotate-90 scale-0 dark:rotate-0 dark:scale-100" 
       xmlns="http://www.w3.org/2000/svg" 
       viewBox="0 0 24 24" 
       fill="currentColor">
    <path d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
  </svg>
</button>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const themeToggle = document.querySelector('[data-theme-toggle]');
    const htmlEl = document.documentElement;
    
    // Check for saved theme preference or use OS preference
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      htmlEl.classList.add('dark');
    }
    
    // Toggle theme and save preference
    themeToggle?.addEventListener('click', () => {
      const isDark = htmlEl.classList.toggle('dark');
      
      // Save theme preference
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
      
      // Trigger custom event for other components to react
      document.dispatchEvent(new CustomEvent('themeChanged', {
        detail: { theme: isDark ? 'dark' : 'light' }
      }));
      
      // Add water ripple effect on theme change
      const rippleOverlay = document.querySelector('.water-ripple-overlay');
      if (rippleOverlay) {
        rippleOverlay.classList.add('ripple-active');
        setTimeout(() => {
          rippleOverlay.classList.remove('ripple-active');
        }, 1500);
      }
    });
  });
</script> 